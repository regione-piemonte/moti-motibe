<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>it.csi.moti</groupId>
  <artifactId>motibe</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>

  <name>MOTI BackEnd</name>

  <properties>
    <!-- Modules version -->
    <revision>1.0.0</revision>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- Compiler configuration -->
    <maven.compiler.target>11</maven.compiler.target>
    <maven.compiler.source>11</maven.compiler.source>

    <!-- Configuration for the remote repository -->
    <repository.url>http://@@REPOSITORY_MAVEN@@/artifactory/maven2</repository.url>

    <!-- Dependencies configuration -->
    <dependencies.version.jboss.bom>17.0.0.Final</dependencies.version.jboss.bom>
    <dependencies.version.log4j>2.13.1</dependencies.version.log4j>
    <dependencies.version.jee>8.0.1</dependencies.version.jee>
    <dependencies.version.mapstruct>1.3.1.Final</dependencies.version.mapstruct>
    <dependencies.version.jws-api>1.1</dependencies.version.jws-api>
    <dependencies.version.jaxws-api>2.3.1</dependencies.version.jaxws-api>

    <dependencies.version.javax-cache-api>1.0.0</dependencies.version.javax-cache-api>
    <dependencies.version.jaxb-api>2.3.1</dependencies.version.jaxb-api>
    <dependencies.version.commons-text>1.8</dependencies.version.commons-text>
    <dependencies.version.commons-lang>2.6</dependencies.version.commons-lang>
    <dependencies.version.shrinkwrap-resolver-bom>2.1.1</dependencies.version.shrinkwrap-resolver-bom>
    <dependencies.version.postgresql>9.4-1201-jdbc4</dependencies.version.postgresql>
    <dependencies.version.joda-time>2.3</dependencies.version.joda-time>
    <dependencies.version.gson-fire>1.8.0</dependencies.version.gson-fire>
    <dependencies.version.swagger-core>1.5.18</dependencies.version.swagger-core>
    <dependencies.version.okhttp>2.7.5</dependencies.version.okhttp>
    <dependencies.version.gson>2.8.1</dependencies.version.gson>
    <dependencies.version.threetenbp>1.3.5</dependencies.version.threetenbp>
    <dependencies.version.httpclient>4.5.12</dependencies.version.httpclient>
    
    <dependencies.version.apache.poi>4.1.2</dependencies.version.apache.poi>

    <!-- Module configuration -->
    <!-- 
    <module.ear.context-root.angular>/moti</module.ear.context-root.angular>
    <module.ear.context-root.rest>/rest</module.ear.context-root.rest>
 	-->
 	<module.ear.context-root.rest>/moti</module.ear.context-root.rest>

    <!-- Plugin configuration -->
    <plugin.version.compiler>3.8.0</plugin.version.compiler>
    <plugin.version.clean>3.1.0</plugin.version.clean>
    <plugin.version.ear>3.0.1</plugin.version.ear>
    <plugin.version.ejb>3.0.0</plugin.version.ejb>
    <plugin.version.jar>3.2.0</plugin.version.jar>
    <plugin.version.surefire>2.22.1</plugin.version.surefire>
    <plugin.version.failsafe>2.22.1</plugin.version.failsafe>
    <plugin.version.war>3.2.2</plugin.version.war>
    <plugin.version.assembly>3.3.0</plugin.version.assembly>
    <plugin.version.wildfly.maven>2.0.0.Final</plugin.version.wildfly.maven>
    <plugin.version.license>2.0.0</plugin.version.license>
    <plugin.version.owasp.dependency-check>5.3.2</plugin.version.owasp.dependency-check>
    <plugin.version.build-helper>3.1.0</plugin.version.build-helper>
    <plugin.version.jaxws>2.3.3</plugin.version.jaxws>
    <plugin.version.xjc>3.3.0</plugin.version.xjc>
  </properties>

  <modules>
    <module>lib</module>
    <module>ejb</module>
    <module>web</module>
    <!-- <module>angular</module> -->
    <module>ear</module>
    <module>tar</module>
  </modules>

  <dependencyManagement>
    <dependencies>

      <!-- Define the version of the liLIBar so that we don't need to repeat ourselves in every module -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>motibe-lib</artifactId>
        <version>${revision}</version>
        <type>jar</type>
      </dependency>

      <!-- Define the version of the EJB jar so that we don't need to repeat ourselves in every module -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>motibe-ejb</artifactId>
        <version>${revision}</version>
        <type>ejb</type>
      </dependency>
      <!-- Define the version of the WAR so that we don't need to repeat ourselves in every module -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>motibe-web</artifactId>
        <version>${revision}</version>
        <type>war</type>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>motibe-angular</artifactId>
        <version>${revision}</version>
        <type>war</type>
        <scope>compile</scope>
      </dependency>
      <!-- Define the version of the EAR so that we don't need to repeat ourselves in every module -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>motibe-ear</artifactId>
        <version>${revision}</version>
        <type>ear</type>
      </dependency>

      <!-- JBoss distributes a complete set of Java EE 8 APIs including
        a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
        a collection) of artifacts. We use this here so that we always get the correct
        versions of artifacts. Here we use the wildfly-javaee8-with-tools stack
        (you can read this as the WildFly stack of the Java EE 8 APIs) -->
      <dependency>
        <groupId>org.wildfly.bom</groupId>
        <artifactId>wildfly-javaee8-with-tools</artifactId>
        <version>${dependencies.version.jboss.bom}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- Project transversal dependencies -->
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>${dependencies.version.log4j}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-to-slf4j</artifactId>
        <version>${dependencies.version.log4j}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <!-- The WildFly plugin deploys your ear to a local JBoss AS container -->
        <!-- Due to Maven's lack of intelligence with EARs we need
          to configure the wildfly maven plugin to skip deployment for all modules.
          We then enable it specifically in the ear module. -->
        <plugin>
          <groupId>org.wildfly.plugins</groupId>
          <artifactId>wildfly-maven-plugin</artifactId>
          <version>${plugin.version.wildfly.maven}</version>
          <inherited>true</inherited>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${plugin.version.license}</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <repositories> 
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>maven2</name>
      <url>${repository.url}</url>
    </repository>
    <repository>
      <snapshots></snapshots>
      <id>snapshots</id>
      <name>maven2</name>
      <url>${repository.url}</url>
    </repository>
  </repositories>
  
  <pluginRepositories>
    <pluginRepository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>maven2</name>
      <url>${repository.url}</url>
    </pluginRepository>
    <pluginRepository>
      <snapshots></snapshots>
      <id>snapshots</id>
      <name>maven2</name>
      <url>${repository.url}</url>
    </pluginRepository>
  </pluginRepositories>

  <profiles>
    <profile>
      <id>local</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <build.profile.id>local</build.profile.id>
      </properties>
    </profile>
    
    <profile>
      <id>local-wildfly</id>
      <properties>
        <build.profile.id>local-wildfly</build.profile.id>
      </properties>
    </profile>
    
    <profile>
      <id>dev-cmto-01</id>
      <properties>
        <build.profile.id>dev-cmto-01</build.profile.id>
      </properties>
    </profile>
    <profile>
      <id>dev-int-01</id>
      <properties>
        <build.profile.id>dev-int-01</build.profile.id>
      </properties>
    </profile>
    <profile>
      <id>dev-rp-01</id>
      <properties>
        <build.profile.id>dev-rp-01</build.profile.id>
      </properties>
    </profile>
    <profile>
      <id>test-cmto-01</id>
      <properties>
        <build.profile.id>test-cmto-01</build.profile.id>
      </properties>
    </profile>
    <profile>
      <id>test-int-01</id>
      <properties>
        <build.profile.id>test-int-01</build.profile.id>
      </properties>
    </profile>
    <profile>
      <id>test-rp-01</id>
      <properties>
        <build.profile.id>test-rp-01</build.profile.id>
      </properties>
    </profile>
    <profile>
      <id>prod-int-01</id>
      <properties>
        <build.profile.id>prod-int-01</build.profile.id>
      </properties>
    </profile>
    <profile>
      <id>prod-cmto-01</id>
      <properties>
        <build.profile.id>prod-cmto-01</build.profile.id>
      </properties>
    </profile>
    <profile>
      <id>prod-rp-01</id>
      <properties>
        <build.profile.id>prod-rp-01</build.profile.id>
      </properties>
    </profile>
    <profile>
      <!-- An optional Arquillian testing profile that executes tests in your Wildfly instance.
        This profile will start a new Wildfly instance, and execute the test, shutting it down when done.
        Run with: mvn clean verify -Parq-managed -->
      <id>arq-managed</id>
      <dependencies>
        <dependency>
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-managed</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${version.failsafe.plugin}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <systemPropertyVariables>
                <arquillian.launch>managed</arquillian.launch>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- An optional Arquillian testing profile that executes tests in a remote Wildfly instance.
        Run with: mvn clean verify -Parq-remote -->
      <id>arq-remote</id>
      <dependencies>
        <dependency>
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-remote</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${version.failsafe.plugin}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <systemPropertyVariables>
                <arquillian.launch>remote</arquillian.launch>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- An optional Arquillian testing profile that executes tests in an embedded Wildfly instance.
        Run with: mvn clean verify -Parq-embedded -->
      <id>arq-embedded</id>
      <dependencies>
        <dependency>
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-embedded</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${version.failsafe.plugin}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <systemPropertyVariables>
                <arquillian.launch>embedded</arquillian.launch>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Invoke via mvn clean package org.owasp:dependency-check-maven:aggregate -P owasp -->
    <profile>
      <id>owasp</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <build.profile.id>dev-rp-01</build.profile.id>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <version>${plugin.version.owasp.dependency-check}</version>
            <executions>
              <execution>
                <goals>
                  <goal>aggregate</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <formats>
                <format>XML</format>
                <format>HTML</format>
                <format>CSV</format>
                <format>JSON</format>
              </formats>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>generate-adapters</id>
      <properties>
        <build.profile.id>local</build.profile.id>
      </properties>
    </profile>

    <profile>
      <id>generate-bom</id>
      <properties>
        <build.profile.id>dev</build.profile.id>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jboss.maven.plugins</groupId>
            <artifactId>bom-builder-maven-plugin</artifactId>
            <version>1.2.0</version>
            <executions>
              <execution>
                <id>build-bom</id>
                <goals>
                  <goal>build-bom</goal>
                </goals>
                <configuration>
                  <bomGroupId>${project.groupId}</bomGroupId>
                  <bomArtifactId>${project.artifactId}-bom</bomArtifactId>
                  <bomVersion>${revision}</bomVersion>
                  <bomDescription>${project.description}</bomDescription>
                  <bomName>${project.name}</bomName>
                  <outputFilename>${project.artifactId}.bom-pom.xml</outputFilename>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

</project>
